개발환경구성
1. DB
Mysql, mariadb 둘중 선택하여 설치
- Mysql : mysql 설치후 쿼리툴은 mysql workbench를 사용
- MariaDB: mariadb 설치후 쿼리툴은 DBeaver 추천
(./doc/웹프로토타입_DB_Schema_Specification(Ver0.1).xlsx 문서에서 user, database, table layout 시트순으로 생성스크립트 사용할것)
mariadb, mysql은 설정파일, DB구조가 동일하므로 설정 및 객체생성과정은 동일함

1.1. DB설정
 vi /etc/mysql/my.cnf에 아래 코드를 입력합니다.
* UTF-8설정
[client]
default-character-set = utf8

[mysql]
default-character-set = utf8

[mysqld]
collation-server = utf8_unicode_ci
init-connect = "SET NAMES utf8"
character-set-server = utf8

* 테이블 대소문자 설정
=>default로 대소문자 구분하나 구분하지 않도록 설정하는것
my.cnf
[mysqld]
lower_case_table_names = 1

적용후 service mysql restart로 서비스 재시작

1.2. 데이터베이스생성
root로 접속
> mysql -u root
접속후 위 엑셀파일 user시트 스크립트실행 => user생성
database시트 스크립트실행 => database생성
table layout 시트 스크립트실행 => 테이블 생성
사용자정보등록 시트 스크립트실행 => 기본사용자 등록
기준정보 시트 스크립트실행 => 공통기준정보 등록

2. Java
프로젝트는 Java 1.8사용
3. Spring Tool Suite 4를 다운받아 설치
spring.io => Projects => Spring Tools 4 Eclipse나 vscode설치

vscode는 플러그인 2개를 설치 
 - spring boot extension pack
 - spring boot developer extension pack

4. 실행 및 테스트방법
vscode의 경우 프로젝트 추가후 
src/main/java/com/gencode/issuetool/PrototypeApp.java를 열고 F5를 누르면 실행된다. 다음과 같은 로그가 출력되면 정상실행
...
20:01:04.648 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8083 (http) with context path '/prototype'
...

REST API기반으로 postman툴을 사용하여 rest api 호출한다.
post방식
url : http://localhost:8083/prototype/auth/login
Body -> raw, JSON타입
{
    "loginId":"admin",
    "passwd":"passwd"
}
으로 설정하고 send를 클릭하면 다음과 같은 결과값이 리턴되면 정상처리.
{
    "resultCode": "0001",
    "resultMsg": "Success",
    "item": {
        "userInfo": {
            "id": 1,
            "loginId": "admin",
            "level": "A",
....
